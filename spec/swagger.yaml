swagger: '2.0'                           
info:                                    
  title: 'People Management API - BRA'   
  version: '0.2.1'                       
                                         
host: ws-peoplemgmt.sdasystems.org       
basePath: /bra                           
schemes:                                 
 - https                                 
security:                                
  - client_credentials:                  
    - peoplemgmt.bra                     
paths:
  '/addressType/byId':
    get:
      tags: ['AddressType']
      operationId: 'getAddressTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/AddressType'
  '/addressType/byFilter':
    get:
      tags: ['AddressType']
      operationId: 'getListAddressTypeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressType'


  '/addressType/systemReference':
    delete:
      tags: ['AddressType']
      operationId: 'addressTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['AddressType']
      operationId: 'addressTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/addressType/byIdList':
    get:
      tags: ['AddressType']
      operationId: 'getListAddressTypeByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressType'


  '/allergyType/byId':
    get:
      tags: ['AllergyType']
      operationId: 'getAllergyTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/AllergyType'
  '/allergyType/byFilter':
    get:
      tags: ['AllergyType']
      operationId: 'getListAllergyTypeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/AllergyType'


  '/allergyType/systemReference':
    delete:
      tags: ['AllergyType']
      operationId: 'allergyTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['AllergyType']
      operationId: 'allergyTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/allergyType/byIdList':
    get:
      tags: ['AllergyType']
      operationId: 'getListAllergyTypeByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/AllergyType'


  '/authentication/setToken':
    post:
      tags: ['Authentication']
      operationId: 'setToken'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: cert
          in: query
          type: string
          required: false
      responses:
        204:
          description: 'Done'
  '/authentication/startSession':
    post:
      tags: ['Authentication']
      operationId: 'startSession'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: tokenKey
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: string

  '/country/systemReference':
    delete:
      tags: ['Country']
      operationId: 'countryDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Country']
      operationId: 'countrySaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/country/byId':
    get:
      tags: ['Country']
      operationId: 'getCountryById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/CountryLite'
  '/country/current':
    get:
      tags: ['Country']
      operationId: 'getCurrent'
      produces:
        - 'applications/json'
        - 'applications/xml'
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/CountryLiteSearch'
  '/country/byIdList':
    get:
      tags: ['Country']
      operationId: 'getListCountryByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/CountryLite'


  '/country/byNameList':
    get:
      tags: ['Country']
      operationId: 'getListCountryByNameList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: nameList
          in: query
          type: array
          items:
            type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/CountryLite'


  '/country/pageAvailable':
    get:
      tags: ['Country']
      operationId: 'getPageAvailable'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: selectedItems
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedCountryLiteSearch'
  '/country/pageByFilter':
    get:
      tags: ['Country']
      operationId: 'getPageCountryByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedCountryLite'
  '/country/pageForSearch':
    get:
      tags: ['Country']
      operationId: 'getPageForSearch'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedCountryLiteSearch'
  '/country/pagePhoneCodeByFilter':
    get:
      tags: ['Country']
      operationId: 'getPagePhoneCodeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedCountryPhoneCode'
  '/disabilityType/byId':
    get:
      tags: ['DisabilityType']
      operationId: 'getDisabilityTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/DisabilityType'
  '/disabilityType/byFilter':
    get:
      tags: ['DisabilityType']
      operationId: 'getListDisabilityTypeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DisabilityType'


  '/disabilityType/pageAvailableToNaturalPerson':
    get:
      tags: ['DisabilityType']
      operationId: 'getPageDisabilityTypeAvailableToNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
        - name: selectedItems
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedDisabilityType'
  '/disabilityType/systemReference':
    delete:
      tags: ['DisabilityType']
      operationId: 'disabilityTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['DisabilityType']
      operationId: 'disabilityTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/disabilityType/disabilityByIdList':
    get:
      tags: ['DisabilityType']
      operationId: 'getListDisabilityByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DisabilityType'


  '/disease/byId':
    get:
      tags: ['Disease']
      operationId: 'getDiseaseById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Disease'
  '/disease/byFilter':
    get:
      tags: ['Disease']
      operationId: 'getListDiseaseByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Disease'


  '/disease/pageAvailableToNaturalPerson':
    get:
      tags: ['Disease']
      operationId: 'getPageDiseaseAvailableToNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPerson
          in: query
          type: string
          format: uuid
          required: true
        - name: selectedItems
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedDisease'
  '/disease/systemReference':
    delete:
      tags: ['Disease']
      operationId: 'diseaseDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Disease']
      operationId: 'diseaseSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/disease/byIdList':
    get:
      tags: ['Disease']
      operationId: 'getListDiseaseByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Disease'


  '/disease/byType':
    get:
      tags: ['Disease']
      operationId: 'getListByType'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: diseaseTypeId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Disease'


  '/diseaseType/byId':
    get:
      tags: ['DiseaseType']
      operationId: 'getDiseaseTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/DiseaseType'
  '/diseaseType/byFilter':
    get:
      tags: ['DiseaseType']
      operationId: 'getListDiseaseTypeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseType'


  '/diseaseType/systemReference':
    delete:
      tags: ['DiseaseType']
      operationId: 'diseaseTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['DiseaseType']
      operationId: 'diseaseTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/diseaseType/byIdList':
    get:
      tags: ['DiseaseType']
      operationId: 'getListDiseaseTypeByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DiseaseType'


  '/documentType/byId':
    get:
      tags: ['DocumentType']
      operationId: 'getDocumentTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/DocumentType'
  '/documentType/byFilter':
    get:
      tags: ['DocumentType']
      operationId: 'getListDocumentTypeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentType'


  '/documentType/byIdList':
    get:
      tags: ['DocumentType']
      operationId: 'getListDocumentTypeByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentType'


  '/documentType/byIdListForSearch':
    get:
      tags: ['DocumentType']
      operationId: 'getListByIdListForSearch'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentTypeLiteSearch'


  '/documentType/forNaturalPersonByFilter':
    get:
      tags: ['DocumentType']
      operationId: 'getListForNaturalPersonByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentType'


  '/documentType/forNaturalPersonByFilterForSearch':
    get:
      tags: ['DocumentType']
      operationId: 'getListForNaturalPersonByFilterForSearch'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentTypeLiteSearch'


  '/documentType/forSpecificPersonByFilter':
    get:
      tags: ['DocumentType']
      operationId: 'getListForSpecificPersonByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DocumentType'


  '/documentType/systemReference':
    delete:
      tags: ['DocumentType']
      operationId: 'documentTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['DocumentType']
      operationId: 'documentTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/documentType/identifierByClassification':
    get:
      tags: ['DocumentType']
      operationId: 'getIdentifierByClassification'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: classification
          in: body
          schema:
            $ref: '#/definitions/DocumentTypeClassification'
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/DocumentType'
  '/emergencyContact':
    delete:
      tags: ['EmergencyContact']
      operationId: 'deleteEmergencyContact'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['EmergencyContact']
      operationId: 'saveEmergencyContact'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: emergencyContactLite
          in: body
          schema:
            $ref: '#/definitions/EmergencyContactLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/EmergencyContactLite'
  '/emergencyContact/byId':
    get:
      tags: ['EmergencyContact']
      operationId: 'getEmergencyContactById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/EmergencyContactLite'
  '/emergencyContact/byNaturalPerson':
    get:
      tags: ['EmergencyContact']
      operationId: 'getListEmergencyContactByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/EmergencyContactLite'


  '/emergencyContact/byNaturalPersonIdList':
    get:
      tags: ['EmergencyContact']
      operationId: 'getListEmergencyContactByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/EmergencyContactLite'


  '/ethnicity/byId':
    get:
      tags: ['Ethnicity']
      operationId: 'getEthnicityById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Ethnicity'
  '/ethnicity/byFilter':
    get:
      tags: ['Ethnicity']
      operationId: 'getListEthnicityByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Ethnicity'


  '/ethnicity/byIdList':
    get:
      tags: ['Ethnicity']
      operationId: 'getListEthnicityByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Ethnicity'


  '/ethnicity':
    put:
      tags: ['Ethnicity']
      operationId: 'saveEthnicity'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: ethnicity
          in: body
          schema:
            $ref: '#/definitions/Ethnicity'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Ethnicity'
    delete:
      tags: ['Ethnicity']
      operationId: 'deleteEthnicity'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/ethnicity/systemReference':
    delete:
      tags: ['Ethnicity']
      operationId: 'ethnicityDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Ethnicity']
      operationId: 'ethnicitySaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/globalization/cultureByName':
    get:
      tags: ['Globalization']
      operationId: 'getCultureByName'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: name
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Culture'
  '/globalization/pageCultureByFilter':
    get:
      tags: ['Globalization']
      operationId: 'getPageCultureByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedCulture'
  '/globalization/pageTimeZoneByFilter':
    get:
      tags: ['Globalization']
      operationId: 'getPageTimeZoneByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedTimeZone'
  '/globalization/timeZoneById':
    get:
      tags: ['Globalization']
      operationId: 'getTimeZoneById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/TimeZone'
  '/healthPlan/byId':
    get:
      tags: ['HealthPlan']
      operationId: 'getHealthPlanById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/HealthPlan'
  '/healthPlan/pageByFilter':
    get:
      tags: ['HealthPlan']
      operationId: 'getPageHealthPlanByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedHealthPlan'
  '/healthPlan/systemReference':
    delete:
      tags: ['HealthPlan']
      operationId: 'healthPlanDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['HealthPlan']
      operationId: 'healthPlanSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/healthPlan/byIdList':
    get:
      tags: ['HealthPlan']
      operationId: 'getListHealthPlanByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/HealthPlan'


  '/healthPlan':
    put:
      tags: ['HealthPlan']
      operationId: 'saveHealthPlan'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: healthPlan
          in: body
          schema:
            $ref: '#/definitions/HealthPlan'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/HealthPlan'
    delete:
      tags: ['HealthPlan']
      operationId: 'deleteHealthPlan'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/integration/naturalPersonList':
    put:
      tags: ['Integration']
      operationId: 'saveNaturalPersonList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonList
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonIntegration'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageLogIntegration'


  '/integration/naturalPersonById':
    get:
      tags: ['Integration']
      operationId: 'getNaturalPersonById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonIntegration'
  '/legalEntity':
    delete:
      tags: ['LegalEntity']
      operationId: 'deleteLegalEntity'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: legalEntityIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        204:
          description: 'Done'
    put:
      tags: ['LegalEntity']
      operationId: 'saveLegalEntity'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: legalEntity
          in: body
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
  '/legalEntity/byCode':
    get:
      tags: ['LegalEntity']
      operationId: 'getByCode'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: code
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
  '/legalEntity/byId':
    get:
      tags: ['LegalEntity']
      operationId: 'getLegalEntityById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
  '/legalEntity/byIdentifierDocumentNumber':
    get:
      tags: ['LegalEntity']
      operationId: 'getByIdentifierDocumentNumber'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: documentNumber
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
  '/legalEntity/byDocumentNumberList':
    get:
      tags: ['LegalEntity']
      operationId: 'getListLegalEntityByDocumentNumberList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: documentNumberList
          in: query
          type: array
          items:
            type: string
          required: false
        - name: documentTypeIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LegalEntityLiteExternal'


  '/legalEntity/byIdList':
    get:
      tags: ['LegalEntity']
      operationId: 'getListLegalEntityByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LegalEntityLiteExternal'


  '/legalEntity/isAdventistActiveByFilter':
    get:
      tags: ['LegalEntity']
      operationId: 'getListIsAdventistActiveByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LegalEntityLiteExternal'


  '/legalEntity/pageByFilter':
    get:
      tags: ['LegalEntity']
      operationId: 'getPageLegalEntityByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: isAdventist
          in: query
          type: boolean
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedLegalEntityLiteExternal'
  '/legalEntity/pageByFilterAndDocNumber':
    get:
      tags: ['LegalEntity']
      operationId: 'getPageByFilterAndDocNumber'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: isAdventist
          in: query
          type: boolean
          required: false
        - name: documentNumber
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedLegalEntityLiteExternal'
  '/legalEntity/insertForImport':
    post:
      tags: ['LegalEntity']
      operationId: 'insertForImport'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: legalEntity
          in: body
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LegalEntityLiteExternal'
  '/legalEntity/systemReference':
    put:
      tags: ['LegalEntity']
      operationId: 'legalEntitySaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: legalEntityIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        204:
          description: 'Done'
  '/legalEntity/lastSystemUpdate':
    get:
      tags: ['LegalEntity']
      operationId: 'getListLegalEntityLastSystemUpdate'
      produces:
        - 'applications/json'
        - 'applications/xml'
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LegalEntitySystemUpdateLite'


  '/legalEntity/notice':
    post:
      tags: ['LegalEntity']
      operationId: 'legalEntityUpdateNotice'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: legalEntityIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        204:
          description: 'Done'
  '/locality/systemReference':
    delete:
      tags: ['Locality']
      operationId: 'localityDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Locality']
      operationId: 'localitySaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/locality/addressByZipPostalCode':
    get:
      tags: ['Locality']
      operationId: 'getAddressByZipPostalCode'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: zipCode
          in: query
          type: string
          required: false
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/ZipPostalCodeAddressLite'
  '/locality/byIdList':
    get:
      tags: ['Locality']
      operationId: 'getListLocalityByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityLite'


  '/locality/byDivisionTypeAndCountry':
    get:
      tags: ['Locality']
      operationId: 'getListByDivisionTypeAndCountry'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: divisionType
          in: body
          schema:
            $ref: '#/definitions/PoliticalDivisionType'
          required: true
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
        - name: parentId
          in: query
          type: string
          format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityLiteSearch'


  '/locality/byNameList':
    get:
      tags: ['Locality']
      operationId: 'getListLocalityByNameList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: nameList
          in: query
          type: array
          items:
            type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityLite'


  '/locality/byTypeAndParent':
    get:
      tags: ['Locality']
      operationId: 'getListByTypeAndParent'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: localityTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: parentId
          in: query
          type: string
          format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityLiteSearch'


  '/locality/byId':
    get:
      tags: ['Locality']
      operationId: 'getLocalityById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LocalityLite'
  '/locality/pageCityByFilterAndCountry':
    get:
      tags: ['Locality']
      operationId: 'getPageCityByFilterAndCountry'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedLocalityLiteSearch'
  '/locality/pageHasAddressByFilterAndCountry':
    get:
      tags: ['Locality']
      operationId: 'getPageHasAddressByFilterAndCountry'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
        - name: filter
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedLocalityLiteSearch'
  '/locality/pageByFilter':
    get:
      tags: ['Locality']
      operationId: 'getPageLocalityByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
        - name: countryId
          in: query
          type: string
          format: uuid
          required: false
        - name: localityTypeId
          in: query
          type: string
          format: uuid
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedLocalityLite'
  '/localityType/systemReference':
    delete:
      tags: ['LocalityType']
      operationId: 'localityTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['LocalityType']
      operationId: 'localityTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/localityType/byCountry':
    get:
      tags: ['LocalityType']
      operationId: 'getListByCountry'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityTypeLite'


  '/localityType/byCountryForSearch':
    get:
      tags: ['LocalityType']
      operationId: 'getListByCountryForSearch'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityTypeLiteSearch'


  '/localityType/byFilter':
    get:
      tags: ['LocalityType']
      operationId: 'getListByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityTypeLite'


  '/localityType/byIdList':
    get:
      tags: ['LocalityType']
      operationId: 'getListLocalityTypeByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalityTypeLite'


  '/localityType/byDivisionTypeAndCountry':
    get:
      tags: ['LocalityType']
      operationId: 'getByDivisionTypeAndCountry'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: divisionType
          in: body
          schema:
            $ref: '#/definitions/PoliticalDivisionType'
          required: true
        - name: countryId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LocalityTypeLite'
  '/localityType/byId':
    get:
      tags: ['LocalityType']
      operationId: 'getLocalityTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/LocalityTypeLite'
  '/maritalStatus/byFilter':
    get:
      tags: ['MaritalStatus']
      operationId: 'getListMaritalStatusByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/MaritalStatus'


  '/maritalStatus/byId':
    get:
      tags: ['MaritalStatus']
      operationId: 'getMaritalStatusById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/MaritalStatus'
  '/maritalStatus/byIdList':
    get:
      tags: ['MaritalStatus']
      operationId: 'getListMaritalStatusByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/MaritalStatus'


  '/maritalStatus/systemReference':
    delete:
      tags: ['MaritalStatus']
      operationId: 'maritalStatusDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['MaritalStatus']
      operationId: 'maritalStatusSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/naturalPersonAllergy/naturalPerson':
    delete:
      tags: ['NaturalPersonAllergy']
      operationId: 'naturalPersonAllergyDeleteNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/naturalPersonAllergy/byNaturalPerson':
    get:
      tags: ['NaturalPersonAllergy']
      operationId: 'getListNaturalPersonAllergyByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonAllergyLite'


  '/naturalPersonAllergy/byId':
    get:
      tags: ['NaturalPersonAllergy']
      operationId: 'getNaturalPersonAllergyById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonAllergyLite'
  '/naturalPersonAllergy':
    put:
      tags: ['NaturalPersonAllergy']
      operationId: 'saveNaturalPersonAllergy'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonAllergy
          in: body
          schema:
            $ref: '#/definitions/NaturalPersonAllergyLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonAllergyLite'
  '/naturalPersonAllergy/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonAllergy']
      operationId: 'getListNaturalPersonAllergyByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonAllergyLite'


  '/naturalPersonAllergy/byTypeAndNaturalPersonIdList':
    get:
      tags: ['NaturalPersonAllergy']
      operationId: 'getListNaturalPersonAllergyByTypeAndNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: allergyTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonAllergyLite'


  '/naturalPersonDisability':
    delete:
      tags: ['NaturalPersonDisability']
      operationId: 'deleteNaturalPersonDisability'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['NaturalPersonDisability']
      operationId: 'saveNaturalPersonDisabilityList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonDisabilityList
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDisabilityLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDisabilityLite'


  '/naturalPersonDisability/byNaturalPerson':
    get:
      tags: ['NaturalPersonDisability']
      operationId: 'getListNaturalPersonDisabilityByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDisabilityLite'


  '/naturalPersonDisability/byId':
    get:
      tags: ['NaturalPersonDisability']
      operationId: 'getNaturalPersonDisabilityById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonDisabilityLite'
  '/naturalPersonDisability/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonDisability']
      operationId: 'getListNaturalPersonDisabilityByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDisabilityLite'


  '/naturalPersonDisability/byTypeAndNaturalPersonIdList':
    get:
      tags: ['NaturalPersonDisability']
      operationId: 'getListNaturalPersonDisabilityByTypeAndNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: disabilityTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDisabilityLite'


  '/naturalPersonDisease':
    delete:
      tags: ['NaturalPersonDisease']
      operationId: 'deleteNaturalPersonDisease'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['NaturalPersonDisease']
      operationId: 'saveNaturalPersonDiseaseList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonDisease
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDiseaseLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDiseaseLite'


  '/naturalPersonDisease/byNaturalPerson':
    get:
      tags: ['NaturalPersonDisease']
      operationId: 'getListNaturalPersonDiseaseByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDiseaseLite'


  '/naturalPersonDisease/byId':
    get:
      tags: ['NaturalPersonDisease']
      operationId: 'getNaturalPersonDiseaseById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonDiseaseLite'
  '/naturalPersonDisease/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonDisease']
      operationId: 'getListNaturalPersonDiseaseByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDiseaseLite'


  '/naturalPersonDisease/byTypeAndNaturalPersonIdList':
    get:
      tags: ['NaturalPersonDisease']
      operationId: 'getListNaturalPersonDiseaseByTypeAndNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: diseaseTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonDiseaseLite'


  '/naturalPersonHealthPlan':
    delete:
      tags: ['NaturalPersonHealthPlan']
      operationId: 'deleteNaturalPersonHealthPlan'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['NaturalPersonHealthPlan']
      operationId: 'saveNaturalPersonHealthPlan'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonHealthPlan
          in: body
          schema:
            $ref: '#/definitions/NaturalPersonHealthPlanLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonHealthPlanLite'
  '/naturalPersonHealthPlan/byNaturalPerson':
    get:
      tags: ['NaturalPersonHealthPlan']
      operationId: 'getListNaturalPersonHealthPlanByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonHealthPlanLite'


  '/naturalPersonHealthPlan/byId':
    get:
      tags: ['NaturalPersonHealthPlan']
      operationId: 'getNaturalPersonHealthPlanById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonHealthPlanLite'
  '/naturalPersonHealthPlan/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonHealthPlan']
      operationId: 'getListNaturalPersonHealthPlanByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonHealthPlanLite'


  '/naturalPersonHealthPlan/byPlanAndNaturalPersonIdList':
    get:
      tags: ['NaturalPersonHealthPlan']
      operationId: 'getListByPlanAndNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: healthPlanId
          in: query
          type: string
          format: uuid
          required: true
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonHealthPlanLite'


  '/naturalPersonMedicine':
    delete:
      tags: ['NaturalPersonMedicine']
      operationId: 'deleteNaturalPersonMedicine'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['NaturalPersonMedicine']
      operationId: 'saveNaturalPersonMedicine'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonMedicineLite
          in: body
          schema:
            $ref: '#/definitions/NaturalPersonMedicineLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonMedicineLite'
  '/naturalPersonMedicine/byNaturalPerson':
    get:
      tags: ['NaturalPersonMedicine']
      operationId: 'getListNaturalPersonMedicineByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonMedicineLite'


  '/naturalPersonMedicine/byId':
    get:
      tags: ['NaturalPersonMedicine']
      operationId: 'getNaturalPersonMedicineById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonMedicineLite'
  '/naturalPersonMedicine/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonMedicine']
      operationId: 'getListNaturalPersonMedicineByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonMedicineLite'


  '/naturalPersonNationality':
    delete:
      tags: ['NaturalPersonNationality']
      operationId: 'deleteNaturalPersonNationality'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['NaturalPersonNationality']
      operationId: 'saveNaturalPersonNationalityList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonNationalityList
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonNationalityLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonNationalityLite'


  '/naturalPersonNationality/byNaturalPerson':
    get:
      tags: ['NaturalPersonNationality']
      operationId: 'getListNaturalPersonNationalityByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonNationalityLite'


  '/naturalPersonNationality/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonNationality']
      operationId: 'getListNaturalPersonNationalityByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonNationalityLite'


  '/naturalPersonNationality/byId':
    get:
      tags: ['NaturalPersonNationality']
      operationId: 'getNaturalPersonNationalityById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonNationalityLite'
  '/naturalPersonRelationship':
    delete:
      tags: ['NaturalPersonRelationship']
      operationId: 'deleteNaturalPersonRelationship'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['NaturalPersonRelationship']
      operationId: 'saveNaturalPersonRelationship'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonRelationship
          in: body
          schema:
            $ref: '#/definitions/NaturalPersonRelationshipLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonRelationshipLite'
  '/naturalPersonRelationship/children':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getListChildren'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DictionaryEntityLite'


  '/naturalPersonRelationship/byNaturalPerson':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonRelationshipLite'


  '/naturalPersonRelationship/siblingsByNaturalPerson':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getListSiblingsByNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/DictionaryEntityLite'


  '/naturalPersonRelationship/byId':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getNaturalPersonRelationshipById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonRelationshipLite'
  '/naturalPersonRelationship/byNaturalPersonIdList':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonRelationshipLite'


  '/naturalPersonRelationship/byRelationshipAndNaturalPersonIdList':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getListByRelationshipAndNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: relationship
          in: body
          schema:
            $ref: '#/definitions/Relationship'
          required: true
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonRelationshipLite'


  '/naturalPersonRelationship/livesWithByNaturalPersonIdList':
    get:
      tags: ['NaturalPersonRelationship']
      operationId: 'getListLivesWithByNaturalPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonRelationshipLite'


  '/naturalPerson':
    delete:
      tags: ['NaturalPerson']
      operationId: 'naturalPersonDeleteNaturalPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        204:
          description: 'Done'
  '/naturalPerson/byBasicPropertyList':
    get:
      tags: ['NaturalPerson']
      operationId: 'getListByBasicPropertyList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: basicPropertyList
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/NPBasicProperty'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonLiteExternal'


  '/naturalPerson/byLastUpdate':
    get:
      tags: ['NaturalPerson']
      operationId: 'getListByLastUpdate'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: lastUpdate
          in: query
          type: string
          format: datetime
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonLiteExternal'


  '/naturalPerson/byIdListForExternal':
    get:
      tags: ['NaturalPerson']
      operationId: 'getListByIdListForExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonLiteExternal'


  '/naturalPerson/byIdForExternal':
    get:
      tags: ['NaturalPerson']
      operationId: 'getByIdForExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
  '/naturalPerson/byDocument':
    get:
      tags: ['NaturalPerson']
      operationId: 'getByDocument'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: documentTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: docNumber
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
  '/naturalPerson/byDocumentNumberList':
    get:
      tags: ['NaturalPerson']
      operationId: 'getListNaturalPersonByDocumentNumberList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: documentNumberList
          in: query
          type: array
          items:
            type: string
          required: false
        - name: documentTypeIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonLiteExternal'


  '/naturalPerson/byUserName':
    get:
      tags: ['NaturalPerson']
      operationId: 'getByUserName'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: userName
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
  '/naturalPerson/byDocument/list':
    get:
      tags: ['NaturalPerson']
      operationId: 'getListByDocument'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: documentTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: docNumber
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonLiteExternal'


  '/naturalPerson/pageActiveByFilterForExternal':
    get:
      tags: ['NaturalPerson']
      operationId: 'getPageActiveByFilterForExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: name
          in: query
          type: string
          required: false
        - name: birthDate
          in: query
          type: string
          format: datetime
          required: false
        - name: gender
          in: body
          schema:
            $ref: '#/definitions/Gender'
          required: false
        - name: documentTypeId
          in: query
          type: string
          format: uuid
          required: false
        - name: documentNumber
          in: query
          type: string
          required: false
        - name: parentName
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedNaturalPersonLiteExternal'
  '/naturalPerson/pageActiveByFilterForExternal2':
    get:
      tags: ['NaturalPerson']
      operationId: 'getPageActiveByFilterForExternal2'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: firstName
          in: query
          type: string
          required: false
        - name: middleName
          in: query
          type: string
          required: false
        - name: lastName
          in: query
          type: string
          required: false
        - name: birthDate
          in: query
          type: string
          format: datetime
          required: true
        - name: gender
          in: body
          schema:
            $ref: '#/definitions/Gender'
          required: true
        - name: motherName
          in: query
          type: string
          required: false
        - name: identifierDocumentNumber
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedNaturalPersonLiteExternal'
  '/naturalPerson/pageSimilarActiveForExternal':
    get:
      tags: ['NaturalPerson']
      operationId: 'getPageSimilarActiveForExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: firstName
          in: query
          type: string
          required: false
        - name: middleName
          in: query
          type: string
          required: false
        - name: lastName
          in: query
          type: string
          required: false
        - name: birthDate
          in: query
          type: string
          format: datetime
          required: true
        - name: gender
          in: body
          schema:
            $ref: '#/definitions/Gender'
          required: true
        - name: motherName
          in: query
          type: string
          required: false
        - name: identifierDocumentNumber
          in: query
          type: string
          required: false
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedNaturalPersonLiteExternal'
  '/naturalPerson/pageSimilarActiveById':
    get:
      tags: ['NaturalPerson']
      operationId: 'getPageSimilarActiveById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonId
          in: query
          type: string
          format: uuid
          required: true
        - name: numRows
          in: query
          type: integer
          format: int32
          required: true
        - name: pageIndex
          in: query
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PagedNaturalPersonLiteExternal'
  '/naturalPerson/forExternal':
    put:
      tags: ['NaturalPerson']
      operationId: 'saveForExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPerson
          in: body
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
  '/naturalPerson/systemReference':
    put:
      tags: ['NaturalPerson']
      operationId: 'naturalPersonSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        204:
          description: 'Done'
  '/naturalPerson/notice':
    post:
      tags: ['NaturalPerson']
      operationId: 'naturalPersonUpdateNotice'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: naturalPersonIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        204:
          description: 'Done'
  '/naturalPerson/lastSystemUpdate':
    get:
      tags: ['NaturalPerson']
      operationId: 'getListNaturalPersonLastSystemUpdate'
      produces:
        - 'applications/json'
        - 'applications/xml'
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/NaturalPersonSystemUpdateLite'


  '/naturalPerson/similarLiteExternal':
    get:
      tags: ['NaturalPerson']
      operationId: 'getSimilarLiteExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: fullName
          in: query
          type: string
          required: false
        - name: birthDate
          in: query
          type: string
          format: datetime
          required: true
        - name: motherName
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
  '/naturalPerson/byIdentifierDocumentNumberLiteExternal':
    get:
      tags: ['NaturalPerson']
      operationId: 'getByIdentifierDocumentNumberLiteExternal'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: identifierDocumentNumber
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/NaturalPersonLiteExternal'
  '/occupation/byFilter':
    get:
      tags: ['Occupation']
      operationId: 'getListOccupationByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Occupation'


  '/occupation/byIdList':
    get:
      tags: ['Occupation']
      operationId: 'getListOccupationByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Occupation'


  '/occupation/byId':
    get:
      tags: ['Occupation']
      operationId: 'getOccupationById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Occupation'
  '/occupation/systemReference':
    delete:
      tags: ['Occupation']
      operationId: 'occupationDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Occupation']
      operationId: 'occupationSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/peopleConfiguration':
    get:
      tags: ['PeopleConfiguration']
      operationId: 'get'
      produces:
        - 'applications/json'
        - 'applications/xml'
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PeopleConfigurationLite'
  '/personAddress':
    delete:
      tags: ['PersonAddress']
      operationId: 'deletePersonAddress'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['PersonAddress']
      operationId: 'savePersonAddress'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personAddressLite
          in: body
          schema:
            $ref: '#/definitions/PersonAddressLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonAddressLite'
  '/personAddress/byPerson':
    get:
      tags: ['PersonAddress']
      operationId: 'getListPersonAddressByPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonAddressLite'


  '/personAddress/byPersonIdList':
    get:
      tags: ['PersonAddress']
      operationId: 'getListPersonAddressByPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonAddressLite'


  '/personAddress/byId':
    get:
      tags: ['PersonAddress']
      operationId: 'getPersonAddressById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonAddressLite'
  '/personAddress/isMailling':
    get:
      tags: ['PersonAddress']
      operationId: 'getIsMailling'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonAddressLite'
  '/personAddress/isMaillingByPersonIdList':
    get:
      tags: ['PersonAddress']
      operationId: 'getListIsMaillingByPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonAddressLite'


  '/personAddress/byTypeAndPersonIdList':
    get:
      tags: ['PersonAddress']
      operationId: 'getListPersonAddressByTypeAndPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: addressTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonAddressLite'


  '/personDocument':
    delete:
      tags: ['PersonDocument']
      operationId: 'deletePersonDocument'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['PersonDocument']
      operationId: 'savePersonDocument'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personDocument
          in: body
          schema:
            $ref: '#/definitions/PersonDocumentLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonDocumentLite'
  '/personDocument/byPerson':
    get:
      tags: ['PersonDocument']
      operationId: 'getListPersonDocumentByPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonDocumentLite'


  '/personDocument/byPersonIdList':
    get:
      tags: ['PersonDocument']
      operationId: 'getListPersonDocumentByPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonDocumentLite'


  '/personDocument/byId':
    get:
      tags: ['PersonDocument']
      operationId: 'getPersonDocumentById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonDocumentLite'
  '/personDocument/validateDocNumber':
    post:
      tags: ['PersonDocument']
      operationId: 'validateDocNumber'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: docNumber
          in: query
          type: string
          required: false
        - name: typeId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: boolean

  '/personDocument/list':
    put:
      tags: ['PersonDocument']
      operationId: 'savePersonDocumentList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personDocumentList
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonDocumentLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonDocumentLite'


  '/personDocument/byTypeAndPersonIdList':
    get:
      tags: ['PersonDocument']
      operationId: 'getListPersonDocumentByTypeAndPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: documentTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonDocumentLite'


  '/personEContact':
    delete:
      tags: ['PersonEContact']
      operationId: 'deletePersonEContact'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['PersonEContact']
      operationId: 'savePersonEContact'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personEContact
          in: body
          schema:
            $ref: '#/definitions/PersonEContactLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonEContactLite'
  '/personEContact/byPerson':
    get:
      tags: ['PersonEContact']
      operationId: 'getListPersonEContactByPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonEContactLite'


  '/personEContact/byPersonIdList':
    get:
      tags: ['PersonEContact']
      operationId: 'getListPersonEContactByPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonEContactLite'


  '/personEContact/byId':
    get:
      tags: ['PersonEContact']
      operationId: 'getPersonEContactById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonEContactLite'
  '/personEContact/byTypeAndPersonIdList':
    get:
      tags: ['PersonEContact']
      operationId: 'getListPersonEContactByTypeAndPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: type
          in: body
          schema:
            $ref: '#/definitions/ContactType'
          required: true
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonEContactLite'


  '/personEContact/byTypeAndContact':
    get:
      tags: ['PersonEContact']
      operationId: 'getListByTypeAndContact'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: type
          in: body
          schema:
            $ref: '#/definitions/ContactType'
          required: true
        - name: contact
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonEContactLite'


  '/personPhone':
    delete:
      tags: ['PersonPhone']
      operationId: 'deletePersonPhone'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['PersonPhone']
      operationId: 'savePersonPhone'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personPhone
          in: body
          schema:
            $ref: '#/definitions/PersonPhoneLite'
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonPhoneLite'
  '/personPhone/byPerson':
    get:
      tags: ['PersonPhone']
      operationId: 'getListPersonPhoneByPerson'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonPhoneLite'


  '/personPhone/byPersonIdList':
    get:
      tags: ['PersonPhone']
      operationId: 'getListPersonPhoneByPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonPhoneLite'


  '/personPhone/byId':
    get:
      tags: ['PersonPhone']
      operationId: 'getPersonPhoneById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonPhoneLite'
  '/personPhone/isDefault':
    get:
      tags: ['PersonPhone']
      operationId: 'getIsDefault'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personId
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PersonPhoneLite'
  '/personPhone/byTypeAndPersonIdList':
    get:
      tags: ['PersonPhone']
      operationId: 'getListPersonPhoneByTypeAndPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: phoneTypeId
          in: query
          type: string
          format: uuid
          required: true
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonPhoneLite'


  '/personPhone/isDefaultByPersonIdList':
    get:
      tags: ['PersonPhone']
      operationId: 'getListIsDefaultByPersonIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: personIdList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonPhoneLite'


  '/phoneType/byFilter':
    get:
      tags: ['PhoneType']
      operationId: 'getListPhoneTypeByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneType'


  '/phoneType/byId':
    get:
      tags: ['PhoneType']
      operationId: 'getPhoneTypeById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/PhoneType'
  '/phoneType/byIdList':
    get:
      tags: ['PhoneType']
      operationId: 'getListPhoneTypeByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/PhoneType'


  '/phoneType/systemReference':
    delete:
      tags: ['PhoneType']
      operationId: 'phoneTypeDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['PhoneType']
      operationId: 'phoneTypeSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/religion/byFilter':
    get:
      tags: ['Religion']
      operationId: 'getListReligionByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Religion'


  '/religion/byId':
    get:
      tags: ['Religion']
      operationId: 'getReligionById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Religion'
  '/religion/byIdList':
    get:
      tags: ['Religion']
      operationId: 'getListReligionByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Religion'


  '/religion/systemReference':
    delete:
      tags: ['Religion']
      operationId: 'religionDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Religion']
      operationId: 'religionSaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/scholarity/systemReference':
    delete:
      tags: ['Scholarity']
      operationId: 'scholarityDeleteSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
    put:
      tags: ['Scholarity']
      operationId: 'scholaritySaveSystemReference'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        204:
          description: 'Done'
  '/scholarity/byFilter':
    get:
      tags: ['Scholarity']
      operationId: 'getListScholarityByFilter'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: filter
          in: query
          type: string
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Scholarity'


  '/scholarity/byIdList':
    get:
      tags: ['Scholarity']
      operationId: 'getListScholarityByIdList'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: idList
          in: query
          type: array
          items:
            type: string
            format: uuid
          required: false
      responses:
        200:
          description: 'Success'
          schema:
            type: array
            items:
              $ref: '#/definitions/Scholarity'


  '/scholarity/byId':
    get:
      tags: ['Scholarity']
      operationId: 'getScholarityById'
      produces:
        - 'applications/json'
        - 'applications/xml'
      parameters:
        - name: id
          in: query
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: 'Success'
          schema:
            $ref: '#/definitions/Scholarity'

definitions:
  AddressType:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  AllergyType:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  BloodType:
    type: string
    enum:
     - 'OPos'
     - 'APos'
     - 'BPos'
     - 'ABPos'
     - 'ONeg'
     - 'ANeg'
     - 'BNeg'
     - 'ABNeg'
  ContactType:
    type: string
    enum:
     - 'Other'
     - 'WebPage'
     - 'InstantMessenger'
     - 'Email'
  CountryLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      abbreviation:
        type: string
      code:
        type: string
      culture:
        $ref: '#/definitions/Culture'
      internationalCodePhone:
        type: string
      name:
        type: string
      nameFemaleNationality:
        type: string
      nameMaleNationality:
        type: string
  CountryLiteSearch:
    type: object
    properties:
      id:
        type: string
        format: uuid
      abbreviation:
        type: string
      code:
        type: string
      name:
        type: string
  CountryPhoneCode:
    type: object
    properties:
      id:
        type: string
        format: uuid
      abbreviation:
        type: string
      code:
        type: string
      internationalCodePhone:
        type: string
      name:
        type: string
  Culture:
    type: object
    properties:
      displayName:
        type: string
      name:
        type: string
  DictionaryEntityLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
  DisabilityType:
    type: object
    properties:
      name:
        type: string
      disabilityGovernmentCode:
        type: string
      id:
        type: string
        format: uuid
  Disease:
    type: object
    properties:
      name:
        type: string
      cID:
        type: string
      diseaseType:
        $ref: '#/definitions/DiseaseType'
      id:
        type: string
        format: uuid
  DiseaseType:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  DocumentType:
    type: object
    required:
      - isPersonIdentifier
      - isRequiredComments
      - isRequiredExpiration
      - isRequiredIssueBy
      - isRequiredIssueDate
    properties:
      name:
        type: string
      code:
        type: string
      isPersonIdentifier:
        type: boolean
      isRequiredComments:
        type: boolean
      isRequiredExpiration:
        type: boolean
      isRequiredIssueBy:
        type: boolean
      isRequiredIssueDate:
        type: boolean
      documentNumberMask:
        type: string
      documentValidation:
        $ref: '#/definitions/DocumentValidation'
      documentTypeClassification:
        $ref: '#/definitions/DocumentTypeClassification'
      id:
        type: string
        format: uuid
  DocumentTypeClassification:
    type: string
    enum:
     - 'LegalEntity'
     - 'NaturalPerson'
     - 'Both'
  DocumentTypeLiteSearch:
    type: object
    properties:
      id:
        type: string
        format: uuid
      code:
        type: string
      name:
        type: string
  DocumentValidation:
    type: string
    enum:
     - 'NoValidation'
     - 'CPFValidation'
     - 'CNPJValidation'
  EmergencyContactLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      contactPhone:
        type: string
      name:
        type: string
      naturalPersonId:
        type: string
        format: uuid
      relationship:
        type: string
  Ethnicity:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  Gender:
    type: string
    enum:
     - 'Male'
     - 'Female'
  HealthPlan:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      planPhone:
        type: string
      id:
        type: string
        format: uuid
  LegalEntityEntityType:
    type: string
    enum:
     - 'LegalEntity'
     - 'PersonAddress'
     - 'PersonDocument'
     - 'PersonEContact'
     - 'PersonPhone'
  LegalEntityLiteExternal:
    type: object
    required:
      - isAdventistEntity
    properties:
      identifierDocumentNumber:
        type: string
      id:
        type: string
        format: uuid
      acronym:
        type: string
      code:
        type: string
      hierarchyNodeId:
        type: string
        format: uuid
      isAdventistEntity:
        type: boolean
      lastUpdate:
        type: string
        format: datetime
      legalName:
        type: string
      name:
        type: string
      newIdentity:
        type: string
        format: uuid
      region:
        $ref: '#/definitions/Culture'
      timeZone:
        $ref: '#/definitions/TimeZone'
      country:
        $ref: '#/definitions/CountryLiteSearch'
  LegalEntitySystemUpdateLite:
    type: object
    properties:
      entityType:
        $ref: '#/definitions/LegalEntityEntityType'
      id:
        type: string
        format: uuid
      lastUpdate:
        type: string
        format: datetime
      legalEntityId:
        type: string
        format: uuid
  LocalityLite:
    type: object
    required:
      - isActive
    properties:
      isActive:
        type: boolean
      zipPostalCode:
        type: string
      refNumber:
        type: string
      id:
        type: string
        format: uuid
      abbreviation:
        type: string
      code:
        type: string
      name:
        type: string
      formattedName:
        type: string
      nameFemaleNaturality:
        type: string
      nameMaleNaturality:
        type: string
      timeZone:
        $ref: '#/definitions/TimeZone'
      country:
        $ref: '#/definitions/CountryLiteSearch'
      localityType:
        $ref: '#/definitions/LocalityTypeLiteSearch'
      localityParent:
        $ref: '#/definitions/LocalityLiteSearch'
  LocalityLiteSearch:
    type: object
    properties:
      id:
        type: string
        format: uuid
      abbreviation:
        type: string
      code:
        type: string
      formattedName:
        type: string
      name:
        type: string
  LocalityTypeLite:
    type: object
    required:
      - hasAddress
      - priority
    properties:
      id:
        type: string
        format: uuid
      code:
        type: string
      countryId:
        type: string
        format: uuid
      countryName:
        type: string
      formattedNameMask:
        type: string
      hasAddress:
        type: boolean
      name:
        type: string
      politicalDivisionType:
        $ref: '#/definitions/PoliticalDivisionType'
      priority:
        type: integer
        format: int32
  LocalityTypeLiteSearch:
    type: object
    properties:
      id:
        type: string
        format: uuid
      code:
        type: string
      name:
        type: string
  LogIntegrationEntityType:
    type: string
    enum:
     - 'MainPerson'
     - 'MainPersonAddress'
     - 'MainPersonDocument'
     - 'MainPersonEContact'
     - 'MainPersonPhone'
     - 'Parent01'
     - 'Parent01Address'
     - 'Parent01Document'
     - 'Parent01EContact'
     - 'Parent01Phone'
     - 'Parent02'
     - 'Parent02Address'
     - 'Parent02Document'
     - 'Parent02EContact'
     - 'Parent02Phone'
     - 'Spouse'
     - 'SpouseAddress'
     - 'SpouseDocument'
     - 'SpouseEContact'
     - 'SpousePhone'
     - 'RelationshipParent01'
     - 'RelationshipParent02'
     - 'RelationshipSpouse'
  MaritalStatus:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  MessageLogIntegration:
    type: object
    properties:
      externalReferenceId:
        type: string
      messageType:
        $ref: '#/definitions/MessageType'
      message:
        type: string
      peopleId:
        type: string
        format: uuid
      entityType:
        $ref: '#/definitions/LogIntegrationEntityType'
  MessageType:
    type: string
    enum:
     - 'Successfully'
     - 'Error'
     - 'Attention'
  NaturalPersonAllergyLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      allergyType:
        $ref: '#/definitions/AllergyType'
      description:
        type: string
      naturalPersonId:
        type: string
        format: uuid
  NaturalPersonDisabilityLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      disabilityType:
        $ref: '#/definitions/DisabilityType'
      naturalPersonId:
        type: string
        format: uuid
  NaturalPersonDiseaseLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      disease:
        $ref: '#/definitions/Disease'
      naturalPersonId:
        type: string
        format: uuid
  NaturalPersonEntityType:
    type: string
    enum:
     - 'NaturalPerson'
     - 'PersonAddress'
     - 'PersonDocument'
     - 'PersonEContact'
     - 'PersonPhone'
     - 'NaturalPersonAllergy'
     - 'NaturalPersonDisability'
     - 'NaturalPersonDisease'
     - 'NaturalPersonHealth'
     - 'NaturalPersonMedicine'
     - 'NaturalPersonRelationship'
     - 'EmergencyContact'
  NaturalPersonHealthPlanLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      expirationDate:
        type: string
        format: datetime
      healthPlan:
        $ref: '#/definitions/HealthPlan'
      medicalId:
        type: string
      naturalPersonId:
        type: string
        format: uuid
  NaturalPersonIntegration:
    type: object
    properties:
      id:
        type: string
        format: uuid
      authenticationUserName:
        type: string
      motherName:
        type: string
      socialName:
        type: string
      baptismDate:
        type: string
        format: datetime
      birthCity:
        $ref: '#/definitions/LocalityLiteSearch'
      birthCountry:
        $ref: '#/definitions/CountryLiteSearch'
      birthDate:
        type: string
        format: datetime
      bloodType:
        $ref: '#/definitions/BloodType'
      deceaseDate:
        type: string
        format: datetime
      ethnicity:
        $ref: '#/definitions/Ethnicity'
      firstName:
        type: string
      fullName:
        type: string
      gender:
        $ref: '#/definitions/Gender'
      identifierDocumentNumber:
        type: string
      lastName:
        type: string
      lastUpdate:
        type: string
        format: datetime
      maritalStatus:
        $ref: '#/definitions/MaritalStatus'
      middleName:
        type: string
      parent01:
        $ref: '#/definitions/NaturalPersonRelationshipIntegration'
      parent02:
        $ref: '#/definitions/NaturalPersonRelationshipIntegration'
      nationalityList:
        type: array
        items:
          $ref: '#/definitions/CountryLiteSearch'

      occupation:
        $ref: '#/definitions/Occupation'
      photo:
        type: string
        format: uuid
      religion:
        $ref: '#/definitions/Religion'
      spouse:
        $ref: '#/definitions/NaturalPersonRelationshipIntegration'
      scholarity:
        $ref: '#/definitions/Scholarity'
      addressList:
        type: array
        items:
          $ref: '#/definitions/PersonAddressLite'

      contactList:
        type: array
        items:
          $ref: '#/definitions/PersonEContactLite'

      documentList:
        type: array
        items:
          $ref: '#/definitions/PersonDocumentLite'

      phoneList:
        type: array
        items:
          $ref: '#/definitions/PersonPhoneLite'

      externalReferenceId:
        type: string
  NaturalPersonLiteExternal:
    type: object
    properties:
      id:
        type: string
        format: uuid
      authenticationUserName:
        type: string
      motherName:
        type: string
      socialName:
        type: string
      baptismDate:
        type: string
        format: datetime
      birthCity:
        $ref: '#/definitions/LocalityLiteSearch'
      birthCountry:
        $ref: '#/definitions/CountryLiteSearch'
      birthDate:
        type: string
        format: datetime
      bloodType:
        $ref: '#/definitions/BloodType'
      deceaseDate:
        type: string
        format: datetime
      ethnicity:
        $ref: '#/definitions/Ethnicity'
      firstName:
        type: string
      fullName:
        type: string
      gender:
        $ref: '#/definitions/Gender'
      identifierDocumentNumber:
        type: string
      lastName:
        type: string
      lastUpdate:
        type: string
        format: datetime
      maritalStatus:
        $ref: '#/definitions/MaritalStatus'
      middleName:
        type: string
      parent01:
        $ref: '#/definitions/NaturalPersonRelationshipLite'
      parent02:
        $ref: '#/definitions/NaturalPersonRelationshipLite'
      naturalPersonNationality:
        type: array
        items:
          $ref: '#/definitions/CountryLiteSearch'

      newIdentity:
        type: string
        format: uuid
      occupation:
        $ref: '#/definitions/Occupation'
      photo:
        type: string
        format: uuid
      religion:
        $ref: '#/definitions/Religion'
      spouse:
        $ref: '#/definitions/NaturalPersonRelationshipLite'
      scholarity:
        $ref: '#/definitions/Scholarity'
  NaturalPersonMedicineLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      description:
        type: string
      dosage:
        type: string
      naturalPersonId:
        type: string
        format: uuid
  NaturalPersonNationalityLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      country:
        $ref: '#/definitions/CountryLiteSearch'
      nameFemaleNationality:
        type: string
      nameMaleNationality:
        type: string
      naturalPersonId:
        type: string
        format: uuid
  NaturalPersonRelationshipIntegration:
    type: object
    required:
      - livesWith
    properties:
      id:
        type: string
        format: uuid
      livesWith:
        type: boolean
      naturalPerson:
        $ref: '#/definitions/NaturalPersonIntegration'
      relatedId:
        type: string
        format: uuid
      relationship:
        $ref: '#/definitions/Relationship'
  NaturalPersonRelationshipLite:
    type: object
    required:
      - livesWith
    properties:
      id:
        type: string
        format: uuid
      livesWith:
        type: boolean
      naturalPersonId:
        type: string
        format: uuid
      naturalPersonName:
        type: string
      relatedId:
        type: string
        format: uuid
      relationship:
        $ref: '#/definitions/Relationship'
  NaturalPersonSystemUpdateLite:
    type: object
    properties:
      entityType:
        $ref: '#/definitions/NaturalPersonEntityType'
      id:
        type: string
        format: uuid
      lastUpdate:
        type: string
        format: datetime
      naturalPersonId:
        type: string
        format: uuid
  NPBasicProperty:
    type: object
    properties:
      birthDate:
        type: string
        format: datetime
      gender:
        $ref: '#/definitions/Gender'
      name:
        type: string
  Occupation:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  PeopleConfigurationLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      personFullNameMask:
        type: string
      country:
        $ref: '#/definitions/CountryLite'
  PersonAddressLite:
    type: object
    required:
      - isMailingAddress
    properties:
      id:
        type: string
        format: uuid
      addressLine01:
        type: string
      addressLine02:
        type: string
      addressLine03:
        type: string
      otherLocality:
        type: string
      isMailingAddress:
        type: boolean
      lastUpdate:
        type: string
        format: datetime
      personId:
        type: string
        format: uuid
      zipPostalCode:
        type: string
      addressType:
        $ref: '#/definitions/AddressType'
      country:
        $ref: '#/definitions/CountryLiteSearch'
      locality:
        $ref: '#/definitions/LocalityLiteSearch'
      stateProvince:
        $ref: '#/definitions/LocalityLiteSearch'
      addressNumber:
        type: string
  PersonDocumentLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      comments:
        type: string
      docNumber:
        type: string
      documentType:
        $ref: '#/definitions/DocumentType'
      expirationDate:
        type: string
        format: datetime
      issueBy:
        type: string
      issueDate:
        type: string
        format: datetime
      lastUpdate:
        type: string
        format: datetime
      personId:
        type: string
        format: uuid
  PersonEContactLite:
    type: object
    properties:
      id:
        type: string
        format: uuid
      contact:
        type: string
      contactType:
        $ref: '#/definitions/ContactType'
      displayAs:
        type: string
      lastUpdate:
        type: string
        format: datetime
      personId:
        type: string
        format: uuid
  PersonPhoneLite:
    type: object
    required:
      - isDefault
      - isSMSReceiver
    properties:
      id:
        type: string
        format: uuid
      cityAreaCode:
        type: string
      countryAreaCode:
        type: string
      extension:
        type: string
      isDefault:
        type: boolean
      isSMSReceiver:
        type: boolean
      lastUpdate:
        type: string
        format: datetime
      localNumber:
        type: string
      personId:
        type: string
        format: uuid
      phoneType:
        $ref: '#/definitions/PhoneType'
  PhoneType:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  PoliticalDivisionType:
    type: string
    enum:
     - 'Region'
     - 'State'
     - 'Province'
     - 'District'
     - 'Community'
     - 'Department'
     - 'Canton'
     - 'City'
  Relationship:
    type: string
    enum:
     - 'Mother'
     - 'Father'
     - 'Spouse'
     - 'Sibling'
     - 'Uncle'
     - 'Aunt'
     - 'Grandmother'
     - 'Grandfather'
     - 'Stepfather'
     - 'Stepmother'
     - 'Parent'
  Religion:
    type: object
    properties:
      name:
        type: string
      code:
        type: string
      id:
        type: string
        format: uuid
  Scholarity:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      id:
        type: string
        format: uuid
  TimeZone:
    type: object
    properties:
      displayName:
        type: string
      id:
        type: string
  ZipPostalCodeAddressLite:
    type: object
    properties:
      neighborhoodRefNumber:
        type: string
      bigUserRefNumber:
        type: string
      refNumber:
        type: string
      id:
        type: string
        format: uuid
      addressLine01:
        type: string
      addressLine02:
        type: string
      addressLine03:
        type: string
      zipPostalCode:
        type: string
      countryLiteSearch:
        $ref: '#/definitions/CountryLiteSearch'
      localityLiteSearch:
        $ref: '#/definitions/LocalityLiteSearch'
  PagedCountryLiteSearch:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/CountryLiteSearch'
  PagedCountryLite:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/CountryLite'
  PagedCountryPhoneCode:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/CountryPhoneCode'
  PagedDisabilityType:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/DisabilityType'
  PagedDisease:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/Disease'
  PagedCulture:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/Culture'
  PagedTimeZone:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/TimeZone'
  PagedHealthPlan:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/HealthPlan'
  PagedLegalEntityLiteExternal:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/LegalEntityLiteExternal'
  PagedLocalityLiteSearch:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/LocalityLiteSearch'
  PagedLocalityLite:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/LocalityLite'
  PagedNaturalPersonLiteExternal:
    type: object
    properties:
      total:
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/NaturalPersonLiteExternal'

securityDefinitions:                                                     
  client_credentials:                                                    
    type: 'oauth2'                                                       
    description: 'Generates a token via the Client Credentials flow.'    
    tokenUrl: 'https://login.sdasystems.org/connect/token'               
    flow: 'application'                                                  
    scopes:                                                              
      peoplemgmt.bra: 'People Management API'                            
                                                                         

